@use "functions";
@use "variables";
@use "sass:math";

@mixin result-row($lightest: #fff, $shadow: false) {
    display: flex;
    margin: 10px 18px;
    color: darken($lightest, 80%);
    flex: 1 1 0;

    @media (max-width: variables.$break-point-tablet) and (min-width: variables.$break-point-mobile + 1) {
        min-width: calc(50% - 36px);
        flex-direction: column;
    }

    @media (max-width: variables.$break-point-mobile) {
        min-width: calc(100% - 36px);
    }

    @if $shadow {
        box-shadow: 0 0 10px rgba(darken($lightest, 50%), .25);
    }
}

@mixin boxed($lightest: #fff, $shadow: false) {
    margin: 18px;
    background: $lightest;
    color: darken($lightest, 80%);

    @if $shadow {
        box-shadow: 0 0 10px rgba(darken($lightest, 50%), .25);
    }
}

@mixin more-btn($color) {
    padding: 8px;
    border-radius: 8px;
    color: functions.set-color($color);
    background-color: $color;
    text-decoration: none;
}

@mixin columns($cols: 3, $gutter: 18px) {
    $col-width: math.div(100%, $cols);
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    .atd-cfi-cols__column {
        flex: 1 0 0%;
        padding-left: $gutter;
        padding-right: $gutter;

        &.atd-cfi-cols-column__stretch {
            flex: 0 0 auto;
            width: 100%;
        }

        &.atd-cfi-cols-column__half {
            flex: 0 0 auto;
            width: 50%;
        }

        @for $i from 1 through $cols {
            &.atd-cfi-cols-column-#{$i} {
                flex: 0 0 auto;
                width: #{$col-width * $i};

                @media (max-width: variables.$break-point-mobile) {
                    width: 100%;
                }
            }
        }
    }
}